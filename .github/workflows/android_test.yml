name: testing
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**.md'

jobs:
  detekt_checks:
    name: Detekt Checks
    permissions:
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Run Detekt
        run: ./gradlew detekt

  instrumentation_test:
    name: Instrumentation Tests
    needs: detekt_checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    permissions:
      contents: read
      actions: write # Needed for cache and artifact upload
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      # https://github.com/ReactiveCircus/android-emulator-runner/commit/62dbb605bba737720e10b196cb4220d374026a6d
      # v2.33.0
      - name: Run instrumentation test
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 29
          arch: x86
          disable-animations: true
          script: |
            adb wait-for-device
            ./gradlew app:connectedDebugAndroidTest  --stacktrace
            ./gradlew :feature:login:connectedDebugAndroidTest  --stacktrace

      # Cache test results for the coverage job
      - name: Cache instrumentation test results
        uses: actions/cache/save@v4
        if: always() # Save cache even if tests fail
        with:
          path: |
            **/build/outputs/androidTest-results/
            **/build/reports/androidTests/
            **/build/test-results/
            **/build/jacoco/
            **/build/tests/
          key: instrumentation-results-${{ github.run_id }}

      - name: Upload Test Reports (if needed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report
          path: '**/build/reports/androidTests/connected/'

  test_coverage:
    name: Test Coverage Report
    needs: instrumentation_test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    continue-on-error: true
    permissions:
      contents: read
      actions: write # Needed for cache and artifact upload
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # Restore cached instrumentation test results
      - name: Restore instrumentation test results
        uses: actions/cache/restore@v4
        with:
          path: |
            **/build/outputs/androidTest-results/
            **/build/reports/androidTests/
            **/build/test-results/
            **/build/jacoco/
            **/build/tests/
          key: instrumentation-results-${{ github.run_id }}

      - name: Run debug unit tests
        run: ./gradlew testDebugUnitTest --stacktrace

      # Skip instrumentation tests since we're using cached results
      # If cache miss occurs, we could run them again as fallback
      - name: Check if instrumentation results exist
        id: check_cache
        run: |
          if [ -d "**/build/outputs/androidTest-results/" ] || [ -d "**/build/reports/androidTests/" ]; then
            echo "cache_hit=true" >> $GITHUB_OUTPUT
          else
            echo "cache_hit=false" >> $GITHUB_OUTPUT
          fi

      # Fallback: run instrumentation tests if cache missed
      - name: Enable KVM (fallback)
        if: steps.check_cache.outputs.cache_hit == 'false'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run debug instrumentation test (fallback)
        if: steps.check_cache.outputs.cache_hit == 'false'
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 29
          arch: x86
          disable-animations: true
          script: |
            adb wait-for-device
            ./gradlew connectedDebugAndroidTest --stacktrace

      - name: Generate JaCoCo
        run: ./gradlew createDebugCombinedCoverageReport

      # https://github.com/codecov/codecov-action/commit/0565863a31f2c772f9f0395002a31e3f06189574
      # v5.4.0
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@78f372e97e6e2f82dc51b004c5fb646501ee30ae
        with:
          files: ${{ github.workspace }}/**/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      # https://github.com/codacy/codacy-coverage-reporter-action/commit/55c3b57cb3bb6833c8c1a6614fee4cebb140de2d
      # v1.3.0
      - name: Upload coverage reports to Codacy
        uses: codacy/codacy-coverage-reporter-action@a38818475bb21847788496e9f0fddaa4e84955ba
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ github.workspace }}/**/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml

      # https://github.com/codecov/test-results-action/commit/f2dba722c67b86c6caa034178c6e4d35335f6706
      # v1.1.0
      - name: Upload Unit Test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Instrumentation Test Reports (if needed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report-coverage
          path: '**/build/reports/androidTests/connected/'