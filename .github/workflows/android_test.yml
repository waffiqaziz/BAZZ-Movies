name: Testing
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

jobs:
  detekt_checks:
    name: Detekt Checks
    permissions:
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Run Detekt
        run: ./gradlew detekt

  instrumentation_test:
    needs: detekt_checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    permissions:
      contents: read
      actions: write # Needed for cache and artifact upload
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run instrumentation test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86
          disable-animations: true
          script: |
            adb wait-for-device
            ./gradlew :app:connectedCheck --stacktrace

      - name: Upload Test Reports (if needed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report
          path: '**/build/reports/androidTests/connected/'

  unit_test:
    needs: detekt_checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # Needed for cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run debug unit tests
        run: ./gradlew testDebugUnitTest

      - name: Generate JaCoCo
        run: ./gradlew createDebugCombinedCoverageReport

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          path: |
            ${{ github.workspace }}/core/mappers/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/core/utils/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/feature/login/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/feature/more/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/feature/search/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/feature/person/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml,
            ${{ github.workspace }}/core/user/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
