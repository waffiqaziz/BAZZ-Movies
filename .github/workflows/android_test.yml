name: testing
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**.md'

jobs:
  detekt_checks:
    name: Detekt Checks
    permissions:
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Run Detekt
        run: ./gradlew detekt

  instrumentation_test:
    needs: detekt_checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    permissions:
      contents: read
      actions: write # Needed for cache and artifact upload
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run instrumentation test
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 29
          arch: x86
          disable-animations: true
          script: |
            adb wait-for-device
            ./gradlew :app:connectedCheck --stacktrace

      - name: Upload Test Reports (if needed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report
          path: '**/build/reports/androidTests/connected/'

  unit_test:
    needs: detekt_checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # Needed for cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Get local.properties from secrets
        run: echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Google Service
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          cat /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json | base64
          echo $DATA > /home/runner/work/BAZZ-Movies/BAZZ-Movies/app/google-services.json

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'


      - name: Run debug unit tests
        run: ./gradlew testDebugUnitTest

      - name: Generate JaCoCo
        run: ./gradlew createDebugCombinedCoverageReport

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574
        with:
          files: ${{ github.workspace }}/**/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Upload coverage reports to Codacy
        uses: codacy/codacy-coverage-reporter-action@55c3b57cb3bb6833c8c1a6614fee4cebb140de2d
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ github.workspace }}/**/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@f2dba722c67b86c6caa034178c6e4d35335f6706
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Must be set in GitHub Secrets
        with:
          args: >
            -Dsonar.projectKey=waffiqaziz_BAZZ-Movies
            -Dsonar.organization=waffiqaziz
            -Dsonar.coverage.jacoco.xmlReportPaths=${{ github.workspace }}/**/build/reports/jacoco/createDebugCombinedCoverageReport/createDebugCombinedCoverageReport.xml
            -Dsonar.java.binaries=${{ github.workspace }}/**/build/intermediates/javac/debug/classes
            -Dsonar.kotlin.binaries=${{ github.workspace }}/**/build/tmp/kotlin-classes/debug

