name: Auto PR after Renovate Merge

on:
  push:
    branches:
      - main

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'
  GRADLE_CACHE: 'gradle'

jobs:
  create-follow-up-pr:
    runs-on: ubuntu-latest
    # Check if the push was from a renovate merge
    if: contains(github.event.head_commit.message, 'renovate') || github.event.head_commit.author.name == 'renovate[bot]'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          # Fetch more history for better commit analysis
          fetch-depth: 10
          # Use a token to enable create PRs
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if this is a renovate merge
        id: renovate_check
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
          COMMIT_COMMITTER: ${{ github.event.head_commit.committer.name }}
        run: |
          # More robust check for renovate commits using environment variables
          if [[ "$COMMIT_MESSAGE" =~ renovate ]] || \
             [[ "$COMMIT_AUTHOR" == "renovate[bot]" ]] || \
             [[ "$COMMIT_COMMITTER" == "renovate[bot]" ]]; then
            echo "is_renovate=true" >> $GITHUB_OUTPUT
            echo "This appears to be a Renovate merge"
          else
            echo "is_renovate=false" >> $GITHUB_OUTPUT
            echo "This is not a Renovate merge, skipping"
          fi

      - name: Set up JDK
        if: steps.renovate_check.outputs.is_renovate == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: ${{ env.GRADLE_CACHE }}

      - name: Setup Google Services JSON
        if: steps.renovate_check.outputs.is_renovate == 'true'
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          if [ -n "$DATA" ]; then
            echo "$DATA" > ./app/google-services.json
          else
            echo "Warning: GOOGLE_SERVICES_JSON secret not found"
          fi

      # -------------------------------
      # Update lint baseline
      # -------------------------------
      - name: Run lint and update baseline
        if: steps.renovate_check.outputs.is_renovate == 'true'
        run: |
          ./gradlew updateLintBaseline --stacktrace || {
            echo "Lint baseline update failed, but continuing..."
            exit 0
          }

      - name: Check lint baseline changes
        if: steps.renovate_check.outputs.is_renovate == 'true'
        id: lint_diff
        run: |
          if git diff --quiet -- '**/lint-baseline.xml'; then
            echo "diff_found=false" >> $GITHUB_OUTPUT
            echo "No lint baseline changes found"
          else
            echo "diff_found=true" >> $GITHUB_OUTPUT
            echo "Lint baseline changes detected"
          
            # Create summary
            echo "## üîç Lint Baseline Changes" > lint-summary.md
            echo "" >> lint-summary.md
            echo "Updated after Renovate dependency changes." >> lint-summary.md
            echo "" >> lint-summary.md
          
            # List changed files
            echo "### Files changed:" >> lint-summary.md
            git diff --name-only -- '**/lint-baseline.xml' | sed 's/^/- `/' | sed 's/$/`/' >> lint-summary.md
          fi

      # -------------------------------
      # Update dependency baseline
      # -------------------------------
      - name: Run dependencyGuardBaseline
        if: steps.renovate_check.outputs.is_renovate == 'true'
        run: |
          ./gradlew dependencyGuardBaseline --stacktrace || {
            echo "Dependency guard baseline update failed, but continuing..."
            exit 0
          }

      - name: Check dependency baseline changes
        if: steps.renovate_check.outputs.is_renovate == 'true'
        id: dep_diff
        run: |
          if git diff --quiet -- '**/dependencies/*.txt'; then
            echo "diff_found=false" >> $GITHUB_OUTPUT
            echo "No dependency baseline changes found"
          else
            echo "diff_found=true" >> $GITHUB_OUTPUT
            echo "Dependency baseline changes detected"
          
            # Create summary
            echo "## üì¶ Dependency Baseline Changes" > dep-summary.md
            echo "" >> dep-summary.md
            echo "Updated after Renovate dependency changes." >> dep-summary.md
            echo "" >> dep-summary.md
          
            # List changed files
            echo "### Files changed:" >> dep-summary.md
            git diff --name-only -- '**/dependencies/*.txt' | sed 's/^/- `/' | sed 's/$/`/' >> dep-summary.md
          fi

      # -------------------------------
      # Create PR only if there are changes
      # -------------------------------
      - name: Create Pull Request
        if: steps.renovate_check.outputs.is_renovate == 'true' && (steps.lint_diff.outputs.diff_found == 'true' || steps.dep_diff.outputs.diff_found == 'true')
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(ci): update baselines after renovate merge"
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          branch: auto/update-baselines-${{ github.run_number }}
          delete-branch: true
          title: "üîÑ Update baselines after Renovate changes"
          body: |
            ## ü§ñ Automated Baseline Updates
            
            This PR was automatically created after Renovate merged dependency updates to `main`.
            
            ### Changes included:
            ${{ steps.lint_diff.outputs.diff_found == 'true' && '- ‚úÖ Updated lint baselines' || '' }}
            ${{ steps.dep_diff.outputs.diff_found == 'true' && '- ‚úÖ Updated dependency baselines' || '' }}
            
            ### Why this PR exists
            After Renovate updates dependencies, the project's lint rules and dependency guard baselines 
            may need updates to reflect the new dependency versions and any new lint issues they introduce.
            
            ### Next steps
            - Review the baseline changes
            - Merge this PR to keep baselines in sync
            
            ---
            
            > **Note**: This PR was created by the `Auto PR after Renovate Merge` workflow
            > Triggered by commit: ${{ github.event.head_commit.id }}
          labels: |
            dependencies
            automated
            chore
          draft: false

      - name: Log PR creation result
        if: steps.renovate_check.outputs.is_renovate == 'true'
        run: |
          if [[ "${{ steps.lint_diff.outputs.diff_found }}" == "true" || "${{ steps.dep_diff.outputs.diff_found }}" == "true" ]]; then
            echo "‚úÖ PR should have been created with baseline updates"
          else
            echo "‚ÑπÔ∏è No baseline changes detected, no PR created"
          fi

      #  Run a quick build test to ensure changes are valid
      - name: Test build with updated baselines
        if: steps.renovate_check.outputs.is_renovate == 'true' && (steps.lint_diff.outputs.diff_found == 'true' || steps.dep_diff.outputs.diff_found == 'true')
        run: |
          echo "Running quick build test..."
          ./gradlew assemble --stacktrace
